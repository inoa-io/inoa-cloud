name: Snapshot

"on":
  push:
    branches:
      - 'main'
      - '[1-9]+.[0-9]+.x'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:

      ###
      ### Prepare
      ###

      - name: checkout
        uses: actions/checkout@v2
      - name: setup java
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: generate build id
        id: prep
        run: |
            branch=${GITHUB_REF##*/}
            sha=${GITHUB_SHA::8}
            ts=$(date +%s)
            echo "::set-output name=BUILD_ID::${branch}-${sha}-${ts}"

      ###
      ### Build
      ###

      - name: setup maven dependencies
        run: mvn -B dependency:go-offline -q
      - name: build
        run: mvn -B clean install -Ddocker.image.version=${{ steps.prep.outputs.BUILD_ID }} -DskipTests

      ###
      ### Docker
      ###

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GIT_ACTION_TOKEN }}
      - name: docker push gateway-registry
        run: docker push --all-tags ghcr.io/grayc-de/gateway-registry
      - name: docker push gateway-registry-hono-bridge
        run: docker push --all-tags ghcr.io/grayc-de/gateway-registry-hono-bridge
      - name: docker push gateway-command-service
        run: docker push --all-tags ghcr.io/grayc-de/gateway-command-service
      - name: docker push inoa-translator
        run: docker push --all-tags ghcr.io/grayc-de/inoa-translator
      - name: docker push inoa-exporter
        run: docker push --all-tags ghcr.io/grayc-de/inoa-exporter
      - name: docker push external-authorization
        run: docker push --all-tags ghcr.io/grayc-de/external-authorization
