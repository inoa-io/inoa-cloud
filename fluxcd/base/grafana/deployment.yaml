apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
    spec:
      initContainers:
        - name: wait-for-postgres
          image: docker.io/library/postgres
          imagePullPolicy: Never
          command:
            [
              sh,
              -c,
              until echo "`date '+%T'` connect psql ..." && psql && echo "`date '+%T'` ... connected"; do sleep 0.1 ; done,
            ]
          env:
            - name: PGCONNECT_TIMEOUT
              value: "1"
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: grafana-env
                  key: GF_DATABASE_HOST
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: grafana-env
                  key: GF_DATABASE_USER
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: grafana-env
                  key: GF_DATABASE_PASSWORD
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      containers:
        - name: grafana
          image: docker.io/grafana/grafana
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: grafana-env
            - secretRef:
                name: grafana-env
          ports:
            - name: http
              containerPort: 8080
          resources:
            limits:
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 25
          volumeMounts:
            - name: datasources
              mountPath: /etc/grafana/provisioning/datasources/datasources.yaml
              subPath: datasources.yaml
              readOnly: true
            - name: config
              mountPath: /etc/grafana/provisioning/dashboards/dashboards.yaml
              subPath: dashboards.yaml
              readOnly: true
            - name: dashboards
              mountPath: /tmp/grafana/dashboards
              readOnly: true
            - name: tmp
              mountPath: /tmp/grafana
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
        - name: k8s-sidecar
          image: docker.io/kiwigrid/k8s-sidecar:1.19.4
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: grafana-sidecar-env
          volumeMounts:
            - name: dashboards
              mountPath: /dashboards
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      automountServiceAccountToken: true
      serviceAccountName: grafana
      terminationGracePeriodSeconds: 5
      volumes:
        - name: config
          configMap:
            name: grafana-config
        - name: datasources
          configMap:
            name: grafana-datasources
        - name: dashboards
          emptyDir: {}
        - name: tmp
          emptyDir: {}
