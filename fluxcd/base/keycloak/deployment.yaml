apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
    spec:
      initContainers:
        - name: wait-for-postgres
          image: docker.io/library/postgres
          imagePullPolicy: IfNotPresent
          command:
            [
              sh,
              -c,
              until echo "`date '+%T'` connect psql ..." && psql && echo "`date '+%T'` ... connected"; do sleep 0.1 ; done,
            ]
          env:
            - name: PGCONNECT_TIMEOUT
              value: "1"
            - name: PGHOST
              valueFrom:
                secretKeyRef:
                  name: keycloak-database
                  key: KC_DB_URL_HOST
            - name: PGDATABASE
              valueFrom:
                secretKeyRef:
                  name: keycloak-database
                  key: KC_DB_DATABASE
            - name: PGUSER
              valueFrom:
                secretKeyRef:
                  name: keycloak-database
                  key: KC_DB_USERNAME
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-database
                  key: KC_DB_PASSWORD
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      containers:
        - name: keycloak
          image: docker.io/kokuwaio/keycloak
          imagePullPolicy: IfNotPresent
          args: [start, --import-realm]
          envFrom:
            - configMapRef:
                name: keycloak-config
            - secretRef:
                name: keycloak-database
            - secretRef:
                name: keycloak-admin
          ports:
            - name: http
              containerPort: 8080
            - name: management
              containerPort: 9000
          startupProbe:
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 30
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 60
          readinessProbe:
            httpGet:
              path: /health
              port: management
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 120
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: data
              mountPath: /app/data
            - name: realm
              mountPath: /app/data/import/realm.json
              subPath: realm.json
              readOnly: true
            - name: themes
              mountPath: /app/themes
              readOnly: true
            - name: tmp
              mountPath: /tmp
      automountServiceAccountToken: false
      enableServiceLinks: false
      terminationGracePeriodSeconds: 10
      volumes:
        - name: data
          emptyDir: {}
        - name: themes
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: realm
          configMap:
            name: keycloak-realm
