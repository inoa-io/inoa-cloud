openapi: 3.0.3
info:
  title: INOA Measurement API
  description: API to export measurement data from INOA.
  version: ${project.version}
  license:
    name: Apache License 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0
  contact:
    name: inoa.io
    url: https://github.com/inoa-io
servers: []
security:
  - BearerAuth: []
paths:
  /measurement/export/last:
    get:
      tags: [measurement]
      summary: Export measured data.
      description: Export measured data with filter. All fields are combined using AND.
      operationId: export
      parameters:
        - $ref: '#/components/parameters/GatewayIds'
        - $ref: '#/components/parameters/DeviceIds'
        - $ref: '#/components/parameters/DeviceTypes'
        - $ref: '#/components/parameters/Sensors'
        - $ref: '#/components/parameters/Units'
        - $ref: '#/components/parameters/ObisCodes'
        - name: timestamp
          in: query
          description: Timestamp for filtering data, if not present now is used.
          schema:
            type: string
            format: date-time
      responses:
        200:
          description: Properties for gateway
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Telemetry'
            text/csv:
              schema:
                items:
                  $ref: '#/components/schemas/Telemetry'
        401:
          description: Unauthorized
components:
  schemas:
    GatewayId:
      type: string
      minLength: 4
      maxLength: 20
      pattern: ^[A-Z][A-Z0-9\-_]{3,19}$
      example: GW-00001
    DeviceId:
      type: string
      pattern: ^[a-zA-Z0-9\-]{2,32}$
    DeviceType:
      type: string
      pattern: ^[a-zA-Z0-9\-]{2,36}$
    Sensor:
      type: string
      pattern: ^[a-zA-Z0-9_\-\:*]{2,64}$
    ObisCode:
      type: string
      enum:
        - 1-0:1.8.0*255
        - 1-0:2.8.0*255
    Unit:
      type: string
      enum:
        - WATTHOUR
    Telemetry:
      description: Datapoint value.
      properties:
        gateway_id:
          $ref: '#/components/schemas/GatewayId'
        device_id:
          $ref: '#/components/schemas/DeviceId'
        device_type:
          $ref: '#/components/schemas/DeviceType'
        sensor:
          $ref: '#/components/schemas/Sensor'
        unit:
          $ref: '#/components/schemas/Unit'
        obis:
          $ref: '#/components/schemas/ObisCode'
        timestamp:
          description: Timestamp of telemetry data.
          type: string
          format: date-time
        value:
          description: Telemetry value.
          type: number
  parameters:
    GatewayIds:
      name: gateway_id
      description: Filter response with given gateway ids.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/GatewayId'
    DeviceIds:
      name: device_id
      description: Filter response with given device ids.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DeviceId'
    DeviceTypes:
      name: device_type
      description: Filter response with given device types.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/DeviceType'
    Units:
      name: unit
      description: Filter response with given units.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Unit'
    Sensors:
      name: sensor
      description: Filter response with given sensors.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/Sensor'
    ObisCodes:
      name: obis
      description: Filter response with given obis ccodes.
      in: query
      schema:
        type: array
        items:
          $ref: '#/components/schemas/ObisCode'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
