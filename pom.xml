<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.kokuwa</groupId>
		<artifactId>maven-parent</artifactId>
		<version>0.5.4</version>
		<relativePath />
	</parent>

	<groupId>io.inoa.cloud</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.2-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>INOA Cloud</name>
	<url>https://github.com/grayc-de/inoa-cloud</url>
	<inceptionYear>2020</inceptionYear>
	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<modules>
		<module>messages</module>
		<module>gateway-registry</module>
		<module>gateway-command-service</module>
		<module>gateway-logger</module>
		<module>hono-bridge</module>
		<module>translator</module>
		<module>exporter</module>
		<module>external-authorization</module>
		<module>test</module>
	</modules>

	<scm>
		<url>https://github.com/grayc-de/inoa-cloud</url>
		<connection>scm:git:https://github.com/grayc-de/inoa-cloud.git</connection>
		<developerConnection>scm:git:https://github.com/grayc-de/inoa-cloud.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>jira</system>
		<url>https://grayc.atlassian.net/browse/INOA</url>
	</issueManagement>

	<properties>

		<!-- ===================================================================== -->
		<!-- =============================== Build =============================== -->
		<!-- ===================================================================== -->

		<docker.influxdb.version>2.0-alpine</docker.influxdb.version>
		<docker.grafana.version>8.1.5</docker.grafana.version>
		<docker.kafka.version>6.1.2</docker.kafka.version>
		<docker.postgres.version>13.1</docker.postgres.version>

		<container.image.repository>ghcr.io/grayc-de</container.image.repository>
		<container.image.name>${project.artifactId}</container.image.name>
		<container.image.version>${project.version}</container.image.version>
		<container.image>${container.image.repository}/${container.image.name}:${container.image.version}</container.image>

		<!-- ===================================================================== -->
		<!-- ============================== Libaries ============================= -->
		<!-- ===================================================================== -->

		<version.io.envoyproxy.controlplane>0.1.28</version.io.envoyproxy.controlplane>
		<version.io.kokuwa.micronaut.codegen>2.2.1</version.io.kokuwa.micronaut.codegen>
		<version.io.kokuwa.micronaut.logging>3.0.0-M1</version.io.kokuwa.micronaut.logging>
		<version.io.kokuwa.micronaut.influxdb>3.0.0-M1</version.io.kokuwa.micronaut.influxdb>
		<version.io.micronaut>3.1.4</version.io.micronaut>
		<version.io.micronaut.data>3.1.2</version.io.micronaut.data>
		<version.org.awaitility>4.1.1</version.org.awaitility>
		<version.org.bouncycastle>1.69</version.org.bouncycastle>
		<version.org.eclipse.hono>1.10.0</version.org.eclipse.hono>
		<version.org.keycloak>15.0.2</version.org.keycloak>
		<version.org.mapstruct>1.5.0.Beta1</version.org.mapstruct>
		<!-- spring version aligned with version from hono-pom -->
		<version.org.springframework.boot>2.4.8</version.org.springframework.boot>
		<version.org.springframework.security>5.5.3</version.org.springframework.security>
		<version.org.testcontainers>1.16.2</version.org.testcontainers>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- micronaut -->
			<dependency>
				<groupId>io.micronaut</groupId>
				<artifactId>micronaut-bom</artifactId>
				<version>${version.io.micronaut}</version>
			</dependency>
			<dependency>
				<groupId>io.micronaut.data</groupId>
				<artifactId>micronaut-data-processor</artifactId>
				<version>${version.io.micronaut.data}</version>
			</dependency>
			<dependency>
				<groupId>io.kokuwa.micronaut</groupId>
				<artifactId>micronaut-logging</artifactId>
				<version>${version.io.kokuwa.micronaut.logging}</version>
			</dependency>
			<dependency>
				<groupId>io.kokuwa.micronaut</groupId>
				<artifactId>micronaut-influxdb</artifactId>
				<version>${version.io.kokuwa.micronaut.influxdb}</version>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.org.springframework.boot}</version>
			</dependency>

			<!-- libraries -->
			<dependency>
				<groupId>org.eclipse.hono</groupId>
				<artifactId>hono-bom</artifactId>
				<version>${version.org.eclipse.hono}</version>
			</dependency>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-bom-parent</artifactId>
				<version>${version.org.keycloak}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${version.org.mapstruct}</version>
			</dependency>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${version.org.testcontainers}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${version.org.awaitility}</version>
			</dependency>
			<dependency>
				<groupId>io.envoyproxy.controlplane</groupId>
				<artifactId>api</artifactId>
				<version>${version.io.envoyproxy.controlplane}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-oauth2-jose</artifactId>
				<version>${version.org.springframework.security}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcprov-jdk15on</artifactId>
				<version>${version.org.bouncycastle}</version>
			</dependency>
			<dependency>
				<groupId>org.bouncycastle</groupId>
				<artifactId>bcpkix-jdk15on</artifactId>
				<version>${version.org.bouncycastle}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>

				<!-- generate sources from openapi spec -->
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<configuration>
						<generatorName>micronaut</generatorName>
						<modelNameSuffix>VO</modelNameSuffix>
						<invokerPackage>io.inoa.fleet.registry.rest</invokerPackage>
						<output>${project.build.directory}</output>
						<configOptions>
							<useLombokGenerated>true</useLombokGenerated>
							<dateTimeRelaxed>false</dateTimeRelaxed>
							<visitable>false</visitable>
						</configOptions>
						<typeMappings>
							<typeMapping>Nullable=io.micronaut.core.annotation.Nullable</typeMapping>
							<typeMapping>Nonnull=io.micronaut.core.annotation.NonNull</typeMapping>
							<typeMapping>Singleton=jakarta.inject.Singleton</typeMapping>
						</typeMappings>
						<ignoreFileOverride>${project.basedir}/../.openapi-ignore</ignoreFileOverride>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>io.kokuwa.micronaut</groupId>
							<artifactId>micronaut-openapi-codegen</artifactId>
							<version>${version.io.kokuwa.micronaut.codegen}</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- adjust jacoco excludes -->
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<configuration>
						<excludes>
							<exclude>**/*VO.class</exclude>
							<exclude>**/*MapperImpl.class</exclude>
						</excludes>
					</configuration>
				</plugin>

				<!-- create container -->
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<configuration>
						<container>
							<jvmFlags>
								<jvmFlag>-XX:+ExitOnOutOfMemoryError</jvmFlag>
							</jvmFlags>
						</container>
						<to>
							<image>${container.image}</image>
						</to>
					</configuration>
				</plugin>

				<!-- speed up release -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<preparationGoals>clean</preparationGoals>
						<goals>clean install -Dmaven.test.skip.exec=true</goals>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
		<plugins>

			<!-- do not deploy anything -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase />
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
