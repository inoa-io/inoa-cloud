<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>io.inoa</groupId>
	<artifactId>parent</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<name>INOA</name>
	<url>https://github.com/inoa-io/inoa-cloud</url>
	<inceptionYear>2021</inceptionYear>
	<licenses>
		<license>
			<name>Apache License 2.0</name>
			<url>https://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<modules>
		<module>lib</module>
		<module>fleet</module>
		<module>measurement</module>
		<module>test</module>
	</modules>

	<scm>
		<url>${project.url}</url>
		<connection>scm:git:${project.url}.git</connection>
		<developerConnection>scm:git:${project.url}.git</developerConnection>
		<tag>HEAD</tag>
	</scm>
	<issueManagement>
		<system>jira</system>
		<url>${project.url}/issues</url>
	</issueManagement>

	<properties>

		<!-- ===================================================================== -->
		<!-- ============================== Build ================================ -->
		<!-- ===================================================================== -->

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.build.propertiesEncoding>ISO-8859-1</project.build.propertiesEncoding>

		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<maven.compiler.parameters>true</maven.compiler.parameters>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
		<maven.compiler.showWarnings>true</maven.compiler.showWarnings>

		<maven.test.redirectTestOutputToFile>true</maven.test.redirectTestOutputToFile>

		<jib.container.jvmFlags>-XX:+ExitOnOutOfMemoryError</jib.container.jvmFlags>
		<jib.from.image>gcr.io/distroless/java17:nonroot</jib.from.image>
		<jib.to.image.registry>ghcr.io/inoa-io</jib.to.image.registry>
		<jib.to.image.repository>${project.artifactId}</jib.to.image.repository>
		<jib.to.image.version>${project.version}${jib.to.image.version.suffix}</jib.to.image.version>
		<jib.to.image.version.suffix />
		<jib.to.image>${jib.to.image.registry}/${jib.to.image.repository}:${jib.to.image.version}</jib.to.image>

		<checkstyle.config.location>checkstyle.xml</checkstyle.config.location>
		<checkstyle.suppressions.location>checkstyle-suppression.xml</checkstyle.suppressions.location>
		<checkstyle.includeTestSourceDirectory>true</checkstyle.includeTestSourceDirectory>

		<!-- ===================================================================== -->
		<!-- ============================== Libaries ============================= -->
		<!-- ===================================================================== -->

		<!-- plugins -->

		<version.org.apache.maven.plugins.checkstyle>3.1.2</version.org.apache.maven.plugins.checkstyle>
		<version.org.apache.maven.plugins.clean>3.2.0</version.org.apache.maven.plugins.clean>
		<version.org.apache.maven.plugins.compiler>3.10.1</version.org.apache.maven.plugins.compiler>
		<version.org.apache.maven.plugins.dependency_>3.3.0</version.org.apache.maven.plugins.dependency_>
		<version.org.apache.maven.plugins.deploy>3.0.0</version.org.apache.maven.plugins.deploy>
		<version.org.apache.maven.plugins.install>3.0.1</version.org.apache.maven.plugins.install>
		<version.org.apache.maven.plugins.jar>3.2.2</version.org.apache.maven.plugins.jar>
		<version.org.apache.maven.plugins.release>3.0.0-M6</version.org.apache.maven.plugins.release>
		<version.org.apache.maven.plugins.resources>3.3.0</version.org.apache.maven.plugins.resources>
		<version.org.apache.maven.plugins.source>3.2.1</version.org.apache.maven.plugins.source>
		<version.org.apache.maven.plugins.surefire>3.0.0-M7</version.org.apache.maven.plugins.surefire>
		<version.org.codehaus.mojo.build-helper>3.3.0</version.org.codehaus.mojo.build-helper>
		<version.org.codehaus.mojo.tidy>1.1.0</version.org.codehaus.mojo.tidy>
		<version.org.openapitools.generator>6.0.1</version.org.openapitools.generator>
		<version.org.openapitools.stylevalidator>1.7</version.org.openapitools.stylevalidator>
		<version.com.google.cloud.tools.jib>3.2.1</version.com.google.cloud.tools.jib>
		<version.com.puppycrawl.tools.checkstyle>10.3.2</version.com.puppycrawl.tools.checkstyle>
		<version.io.kokuwa.checkstyle>0.5.6</version.io.kokuwa.checkstyle>
		<version.io.kokuwa.micronaut.codegen>3.0.1</version.io.kokuwa.micronaut.codegen>

		<!-- dependencies -->

		<version.io.cloudevents>2.3.0</version.io.cloudevents>
		<version.io.envoyproxy.controlplane>0.1.32</version.io.envoyproxy.controlplane>
		<version.io.micronaut>3.6.0</version.io.micronaut>
		<version.io.micronaut.data>3.7.2</version.io.micronaut.data>
		<version.io.kokuwa.micronaut.influxdb>3.0.0-M1</version.io.kokuwa.micronaut.influxdb>
		<version.io.kokuwa.micronaut.logging>3.0.4</version.io.kokuwa.micronaut.logging>
		<version.org.awaitility>4.2.0</version.org.awaitility>
		<version.org.eclipse.hono>1.12.1</version.org.eclipse.hono>
		<version.org.keycloak>15.0.2</version.org.keycloak>
		<version.org.mapstruct>1.5.2.Final</version.org.mapstruct>
		<version.org.projectlombok>1.18.24</version.org.projectlombok>
		<!-- spring version aligned with version from hono-pom -->
		<version.org.springframework.boot>2.4.13</version.org.springframework.boot>
		<version.com.jayway.jsonpath>2.7.0</version.com.jayway.jsonpath>

		<!-- images -->

		<docker.envoy.version>v1.20.1</docker.envoy.version>
		<docker.grafana.version>8.3.3</docker.grafana.version>
		<docker.hono.version>${version.org.eclipse.hono}</docker.hono.version>
		<docker.influxdb.version>2.0-alpine</docker.influxdb.version>
		<docker.kafka.version>6.1.2</docker.kafka.version>
		<docker.keycloak.version>${version.org.keycloak}</docker.keycloak.version>
		<docker.postgres.version>13.5</docker.postgres.version>

	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- micronaut -->
			<dependency>
				<groupId>io.micronaut</groupId>
				<artifactId>micronaut-bom</artifactId>
				<version>${version.io.micronaut}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>io.micronaut</groupId>
				<artifactId>micronaut-inject</artifactId>
				<version>${version.io.micronaut}</version>
				<exclusions>
					<exclusion>
						<groupId>javax.annotation</groupId>
						<artifactId>javax.annotation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.micronaut.data</groupId>
				<artifactId>micronaut-data-processor</artifactId>
				<version>${version.io.micronaut.data}</version>
			</dependency>
			<dependency>
				<groupId>io.kokuwa.micronaut</groupId>
				<artifactId>micronaut-logging</artifactId>
				<version>${version.io.kokuwa.micronaut.logging}</version>
			</dependency>
			<dependency>
				<groupId>io.kokuwa.micronaut</groupId>
				<artifactId>micronaut-influxdb</artifactId>
				<version>${version.io.kokuwa.micronaut.influxdb}</version>
				<exclusions>
					<exclusion>
						<groupId>com.google.code.findbugs</groupId>
						<artifactId>jsr305</artifactId>
					</exclusion>
					<exclusion>
						<groupId>io.swagger</groupId>
						<artifactId>swagger-annotations</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.org.springframework.boot}</version>
			</dependency>

			<!-- libraries -->
			<dependency>
				<groupId>io.cloudevents</groupId>
				<artifactId>cloudevents-json-jackson</artifactId>
				<version>${version.io.cloudevents}</version>
				<exclusions>
					<exclusion>
						<groupId>com.fasterxml.jackson.core</groupId>
						<artifactId>jackson-core</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.fasterxml.jackson.core</groupId>
						<artifactId>jackson-databind</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.cloudevents</groupId>
				<artifactId>cloudevents-kafka</artifactId>
				<version>${version.io.cloudevents}</version>
				<exclusions>
					<exclusion>
						<groupId>org.apache.kafka</groupId>
						<artifactId>kafka-clients</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.envoyproxy.controlplane</groupId>
				<artifactId>api</artifactId>
				<version>${version.io.envoyproxy.controlplane}</version>
			</dependency>
			<dependency>
				<groupId>org.eclipse.hono</groupId>
				<artifactId>hono-bom</artifactId>
				<version>${version.org.eclipse.hono}</version>
			</dependency>
			<dependency>
				<groupId>org.keycloak.bom</groupId>
				<artifactId>keycloak-bom-parent</artifactId>
				<version>${version.org.keycloak}</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${version.org.projectlombok}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${version.org.mapstruct}</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>${version.org.awaitility}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>
	<dependencies>

		<!-- avoid compiler warning, see https://docs.micronaut.io/latest/guide/#_nullable_annotations -->
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>jsr305</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- build -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>

	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.checkstyle}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${version.com.puppycrawl.tools.checkstyle}</version>
						</dependency>
						<dependency>
							<groupId>io.kokuwa</groupId>
							<artifactId>maven-parent</artifactId>
							<version>${version.io.kokuwa.checkstyle}</version>
							<type>zip</type>
							<classifier>checkstyle</classifier>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.clean}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.compiler}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.dependency_}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.deploy}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.install}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.jar}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.release}</version>
					<configuration>
						<tagNameFormat>@{project.version}</tagNameFormat>
						<releaseProfiles>release</releaseProfiles>
						<localCheckout>true</localCheckout>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.resources}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.surefire}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${version.org.apache.maven.plugins.source}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${version.org.codehaus.mojo.build-helper}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>tidy-maven-plugin</artifactId>
					<version>${version.org.codehaus.mojo.tidy}</version>
				</plugin>
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${version.org.openapitools.generator}</version>
					<configuration>
						<generatorName>micronaut</generatorName>
						<modelNameSuffix>VO</modelNameSuffix>
						<output>${project.build.directory}</output>
						<strictSpec>true</strictSpec>
						<skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>io.kokuwa.micronaut</groupId>
							<artifactId>micronaut-openapi-codegen</artifactId>
							<version>${version.io.kokuwa.micronaut.codegen}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.openapitools.openapistylevalidator</groupId>
					<artifactId>openapi-style-validator-maven-plugin</artifactId>
					<version>${version.org.openapitools.stylevalidator}</version>
					<configuration>
						<!-- see https://opensource.zalando.com/restful-api-guidelines -->
						<ignoreHeaderXNaming>false</ignoreHeaderXNaming>
						<headerNamingConvention>AnyCase</headerNamingConvention>
						<pathNamingConvention>HyphenCase</pathNamingConvention>
						<parameterNamingConvention>UnderscoreCase</parameterNamingConvention>
						<propertyNamingConvention>UnderscoreCase</propertyNamingConvention>
						<!-- skip examples -->
						<validateModelPropertiesExample>false</validateModelPropertiesExample>
					</configuration>
				</plugin>
				<plugin>
					<groupId>com.google.cloud.tools</groupId>
					<artifactId>jib-maven-plugin</artifactId>
					<version>${version.com.google.cloud.tools.jib}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<id>check</id>
			<activation>
				<file>
					<exists>pom.xml</exists>
				</file>
			</activation>
			<build>
				<plugins>

					<!-- add source for downstream projects -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- fail if any pom is dirty -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>tidy-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- fail if checkstyle reports problems -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

				</plugins>
			</build>
		</profile>
	</profiles>
</project>
