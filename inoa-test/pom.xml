<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.inoa</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>test</artifactId>

	<name>INOA :: Integration Test</name>

	<dependencies>

		<!-- micronaut -->
		<dependency>
			<groupId>io.micronaut.security</groupId>
			<artifactId>micronaut-security-jwt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-http-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-validation</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kokuwa.micronaut</groupId>
			<artifactId>micronaut-influxdb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kokuwa.micronaut</groupId>
			<artifactId>micronaut-logging</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>org.eclipse.paho</groupId>
			<artifactId>org.eclipse.paho.client.mqttv3</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty-codec-mqtt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut.test</groupId>
			<artifactId>micronaut-test-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<defaultGoal>verify</defaultGoal>
		<testResources>
			<testResource>
				<directory>${project.basedir}/src/test/resources</directory>
				<targetPath>${project.build.testOutputDirectory}</targetPath>
			</testResource>
			<!-- Copy and filter only YAML files -->
			<testResource>
				<directory>${project.basedir}/src/test/k3s</directory>
				<targetPath>../k3s</targetPath>
				<includes><include>**/*.yaml</include></includes>
				<filtering>true</filtering>
			</testResource>
			<!-- Copy all other files without filtering -->
			<testResource>
				<directory>${project.basedir}/src/test/k3s</directory>
				<targetPath>../k3s</targetPath>
				<excludes><exclude>**/*.yaml</exclude></excludes>
			</testResource>
			<testResource>
				<directory>${project.basedir}/../inoa-fleet/src/main/resources/openapi</directory>
				<targetPath>../k3s/dev/observability/swaggerui/files</targetPath>
			</testResource>
			<testResource>
				<directory>${project.basedir}/../inoa-measurement/src/main/resources/openapi</directory>
				<targetPath>../k3s/dev/observability/swaggerui/files</targetPath>
			</testResource>
		</testResources>
		<plugins>

			<!-- configure annotation processors -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${version.org.projectlombok}</version>
						</path>
						<path>
							<groupId>io.micronaut</groupId>
							<artifactId>micronaut-inject-java</artifactId>
							<version>${version.io.micronaut}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase />
					</execution>
				</executions>
			</plugin>

			<!-- add generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>openapi-test-sources</id>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-test-sources/openapi</source>
								<source>${project.build.directory}/generated-sources/annotations</source>
								<source>${project.build.directory}/generated-sources/openapi</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generate sources from openapi spec -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>openapi-generate-fleet-clients</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/../inoa-fleet/src/main/resources/openapi/inoa-fleet-api.yaml</inputSpec>
							<packageName>io.inoa.fleet.api</packageName>
							<apiPackage>io.inoa.fleet.api</apiPackage>
							<modelPackage>io.inoa.fleet.model</modelPackage>
							<configOptions>
								<clientId>fleet</clientId>
								<pageable>true</pageable>
								<generateAuthentication>true</generateAuthentication>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>openapi-generate-measurement-clients</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/../inoa-measurement/src/main/resources/openapi/inoa-measurement-api.yaml</inputSpec>
							<packageName>io.inoa.measurement.api</packageName>
							<apiPackage>io.inoa.measurement.api</apiPackage>
							<modelPackage>io.inoa.measurement.model</modelPackage>
							<configOptions>
								<clientId>measurement</clientId>
								<pageable>true</pageable>
								<generateAuthentication>true</generateAuthentication>
							</configOptions>
						</configuration>
					</execution>
					<execution>
						<id>openapi-generate-hawkbit-management-clients</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/../inoa-fleet/src/main/resources/openapi/hawkbit-management-api.yaml</inputSpec>
							<apiPackage>org.eclipse.hawkbit.api</apiPackage>
							<modelPackage>org.eclipse.hawkbit.model</modelPackage>
							<configOptions>
								<clientId>hawkbit</clientId>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- handle k3s lifecycle -->
			<plugin>
				<groupId>io.kokuwa.maven</groupId>
				<artifactId>k3s-maven-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>run</goal>
							<goal>image</goal>
							<goal>apply</goal>
							<goal>rm</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<imageTag>v1.24.12-k3s1</imageTag>
					<manifests>${project.build.directory}/k3s</manifests>
					<subdir>test</subdir>
					<disableServicelb>false</disableServicelb>
					<disableLocalStorage>false</disableLocalStorage>
					<portBindings>
						<portBinding>1883:1883</portBinding>
						<portBinding>8080:8080</portBinding>
						<portBinding>8090:8090</portBinding>
						<portBinding>8883:8883</portBinding>
					</portBindings>
					<ctrImages>
						<ctrImage>postgres:14.4-bullseye</ctrImage>
						<ctrImage>traefik:v2.8.3</ctrImage>
						<ctrImage>influxdb:2.3</ctrImage>
						<ctrImage>kokuwaio/keycloak:21.1.1</ctrImage>
						<ctrImage>kokuwaio/keycloak:21.1.1-import</ctrImage>
						<ctrImage>kiwigrid/k8s-sidecar:1.19.4</ctrImage>
						<ctrImage>grafana/grafana:9.1.0</ctrImage>
						<ctrImage>quay.io/strimzi/kafka:latest-kafka-2.8.1</ctrImage>
						<ctrImage>hawkbit/hawkbit-update-server:0.3.0M8</ctrImage>
					</ctrImages>
					<tarFiles>
						<tarFile>${project.basedir}/../inoa-fleet/target/jib-image.tar</tarFile>
						<tarFile>${project.basedir}/../inoa-measurement/target/jib-image.tar</tarFile>
					</tarFiles>
					<dockerImages>
						<dockerImage>ghcr.io/inoa-io/groundcontrol:latest</dockerImage>
					</dockerImages>
				</configuration>
			</plugin>

			<!-- run tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- skip useless executions -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>default-resources</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<executions>
					<execution>
						<id>default-test</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase />
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>dev</id>
			<activation>
				<property>
					<name>!env.CI</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.kokuwa.maven</groupId>
						<artifactId>k3s-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>restart</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<resources>
								<resource>deployment/inoa/fleet</resource>
								<resource>deployment/inoa/measurement</resource>
								<resource>deployment/inoa/groundcontrol</resource>
							</resources>
							<subdir>dev</subdir>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
