<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.inoa.cloud</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.2-SNAPSHOT</version>
	</parent>

	<artifactId>gateway-registry-hono-bridge</artifactId>

	<name>INOA Cloud :: Hono Bridge</name>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.eclipse.hono</groupId>
				<artifactId>hono-bom</artifactId>
				<version>${version.org.eclipse.hono}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${version.org.springframework.boot}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>

		<!-- spring -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-logging</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- eclipse -->
		<dependency>
			<groupId>org.eclipse.hono</groupId>
			<artifactId>hono-service-base-spring</artifactId>
		</dependency>
		<dependency>
			<groupId>org.eclipse.hono</groupId>
			<artifactId>hono-service-device-registry-base</artifactId>
		</dependency>

		<!-- monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-autoconfigure</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<scope>runtime</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- add generated sources -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>openapi-sources</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.build.directory}/generated-sources/openapi</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- generate sources from openapi spec -->
			<plugin>
				<groupId>org.openapitools</groupId>
				<artifactId>openapi-generator-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>openapi-management-generate</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/../gateway-registry/src/main/resources/openapi/management.yaml</inputSpec>
							<apiPackage>io.inoa.fleet.registry.rest</apiPackage>
							<generateApis>false</generateApis>
							<generateApiTests>false</generateApiTests>
							<modelsToGenerate>Tenant,GatewayDetail,CredentialType,Credential,Secret,SecretDetail,SecretDetailPassword,SecretDetailRSA,SecretDetailPSK</modelsToGenerate>
							<generateSupportingFiles>false</generateSupportingFiles>
							<configOptions>
								<useBeanValidation>false</useBeanValidation>
								<introspected>false</introspected>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- create container -->
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>dockerBuild</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
