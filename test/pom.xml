<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>io.inoa</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>

	<artifactId>test</artifactId>

	<name>INOA :: Integration Test</name>

	<properties>
		<maven.test.skip.exec>true</maven.test.skip.exec>
	</properties>

	<dependencies>

		<!-- project -->
		<dependency>
			<groupId>io.inoa.fleet</groupId>
			<artifactId>fleet-registry-api-gateway</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.inoa.fleet</groupId>
			<artifactId>fleet-registry-api-management</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.inoa.fleet</groupId>
			<artifactId>fleet-registry-service</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-http-server-netty</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut.sql</groupId>
					<artifactId>micronaut-jdbc-hikari</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut.flyway</groupId>
					<artifactId>micronaut-flyway</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-management</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut.micrometer</groupId>
					<artifactId>micronaut-micrometer-registry-prometheus</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.postgresql</groupId>
					<artifactId>postgresql</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.inoa.fleet</groupId>
			<artifactId>fleet-gateway-logger</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-http-server-netty</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-management</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut.micrometer</groupId>
					<artifactId>micronaut-micrometer-registry-prometheus</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micrometer</groupId>
					<artifactId>micrometer-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.inoa.measurement</groupId>
			<artifactId>measurement-telemetry-translator</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-http-server-netty</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-management</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut.micrometer</groupId>
					<artifactId>micronaut-micrometer-registry-prometheus</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micrometer</groupId>
					<artifactId>micrometer-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>io.inoa.measurement</groupId>
			<artifactId>measurement-telemetry-exporter</artifactId>
			<version>${project.version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>io.micronaut.micrometer</groupId>
					<artifactId>micronaut-micrometer-registry-prometheus</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-http-server-netty</artifactId>
				</exclusion>
				<exclusion>
					<groupId>io.micronaut</groupId>
					<artifactId>micronaut-management</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- micronaut -->
		<dependency>
			<groupId>io.micronaut.security</groupId>
			<artifactId>micronaut-security-jwt</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-http-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.micronaut</groupId>
			<artifactId>micronaut-validation</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kokuwa.micronaut</groupId>
			<artifactId>micronaut-influxdb</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.kokuwa.micronaut</groupId>
			<artifactId>micronaut-logging</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- test -->
		<dependency>
			<groupId>io.micronaut.test</groupId>
			<artifactId>micronaut-test-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.awaitility</groupId>
			<artifactId>awaitility</artifactId>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>

			<!-- configure annotation processors -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${version.org.projectlombok}</version>
						</path>
						<path>
							<groupId>io.micronaut</groupId>
							<artifactId>micronaut-inject-java</artifactId>
							<version>${version.io.micronaut}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
				<executions>
					<execution>
						<id>default-compile</id>
						<phase />
					</execution>
				</executions>
			</plugin>

			<!-- copy compose -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>compose</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}/src/test/compose</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
							<outputDirectory>${project.build.directory}/compose</outputDirectory>
						</configuration>
					</execution>
					<execution>
						<id>default-resources</id>
						<phase />
					</execution>
				</executions>
			</plugin>

			<!-- skip useless executions -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>default-jar</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<executions>
					<execution>
						<id>default-install</id>
						<phase />
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase />
					</execution>
				</executions>
			</plugin>

		</plugins>
	</build>
</project>
