when:
  - event: pull_request
  - event: manual
    branch:
      exclude: [main]

variables:
  - &when-path
    path: [api/**, app/**, service/**, image/**, test/**, pom.xml, lombok.config]
  - &maven
    image: ghcr.io/grayc-de/plugins/inoa
    depends_on: []
    environment: 
      DOCKER_HOST: tcp://dockerd:2375
      TESTCONTAINERS_RYUK_DISABLED: true
    when:
      <<: *when-path

services:
  - name: dockerd
    image: ghcr.io/grayc-de/plugins/dockerd
    # 2375 docker rest api
    # 6443 k3s control plane
    # 8080 k3s http api
    # 8883 k3s mqtt api
    ports: [2375, 6443, 8080, 8883]
    privileged: true
    when: { <<: *when-path }

steps:

  yarn:
    image: ghcr.io/grayc-de/plugins/node:20-chrome
    depends_on: []
    directory: app
    commands:
      - yarn install --immutable
      - yarn lint
      - yarn test --no-watch --no-progress
    when: [path: [app/**]]

  # speed up later steps by preloading used images
  preload-images:
    <<: *maven
    environment:
      DOCKER_CONFIG_JSON: {from_secret: DOCKER_CONFIG_JSON}
    commands:
      - mkdir $HOME/.docker && echo "$DOCKER_CONFIG_JSON" > $HOME/.docker/config.json
      # docker build
      - docker pull --quiet ghcr.io/grayc-de/plugins/inoa &
      - docker pull --quiet docker.io/library/debian:stable-slim &
      - docker pull --quiet docker.io/eclipse-temurin:17-jre &
      # test containers
      - docker pull --quiet docker.io/library/postgres:14.11 &
      - docker pull --quiet docker.io/library/influxdb:2.7.5 &
      # integration tests
      - docker pull --quiet docker.io/rancher/k3s:v1.28.6-k3s2 &
      - docker pull --quiet ghcr.io/grayc-de/kafka:3.6.1 &
      - docker pull --quiet ghcr.io/inoa-io/mcnoize:0.0.1 &
      - wait
  # Build the API packages for TypeScript (Client) and Java (Service) via Maven
  build-api:
    <<: *maven
    commands: [mvn -Dcheck.skip install -pl api -am]
  # Build the Java Service via Maven
  build-service:
    <<: *maven
    depends_on: [build-api]
    commands: [mvn -Dcheck.skip -Dmaven.test.skip install -pl service]
  # Build the Angular App via Maven, via Yarn
  build-app:
    <<: *maven
    depends_on: [build-api]
    commands: [mvn -Dcheck.skip -Dmaven.test.skip install -pl app]
  # Execute the tests for the INOA service via Maven
  test-service:
    <<: *maven
    depends_on: [build-service]
    commands:
      - DOCKER_HOST=tcp://$(docker run --rm --network host debian:stable-slim hostname -I | tr ' ' '\n' | grep 10.42):2375
      - mvn -Dcheck.skip test -pl service -Dsurefire.rerunFailingTestsCount=2
    when: [path: [pom.xml, api/**, service/**]]
  # Build the docker image for INOA
  image:
    <<: *maven
    depends_on: [build-service, build-app]
    commands: [mvn -Dcheck.skip install -pl image]
  # Prepare the integration test environment with k3s
  integration-prepare:
    <<: *maven
    depends_on: [build-api]
    commands:
      [
        mvn -Dcheck.skip -pl test pre-integration-test -Dk3s.skipApply -Dk3s.dockerImages=,
      ]
  # Execute integration tests within a k3s based environment
  integration-test:
    <<: *maven
    depends_on: [image, integration-prepare]
    commands:
      - DOCKER_IP=$(docker run --rm --network host debian:stable-slim hostname -I | tr ' ' '\n' | grep 10.42)
      - INOA_DOMAIN="$${DOCKER_IP}.nip.io"
      - echo $${INOA_DOMAIN}
      - mvn -Dcheck.skip -pl test verify -Dk3s.failIfExists=false -X -Dk3s.skipRm=true -Dinoa.domain=$${INOA_DOMAIN} -Dmcnoise.replicas=0
  # In case of failing integration tests, keep the logs from k3s executions
  integration-errors:
    <<: *maven
    depends_on: [integration-test]
    commands:
      - set
      - docker ps -a
      - docker logs k3s-maven-plugin
    when:
      <<: *when-path
      status: failure
  # In case of failing integration tests, keep the logs from inoa service
  integration-inoa-logs:
    image: ghcr.io/grayc-de/plugins/kubectl
    depends_on: [integration-test]
    commands:
      - sed -i 's/127.0.0.1/dockerd/g' test/target/k3s.yaml
      - kubectl --insecure-skip-tls-verify logs -l app.kubernetes.io/name=inoa --all-containers=true --namespace=default
    when:
      <<: *when-path
      status: failure
