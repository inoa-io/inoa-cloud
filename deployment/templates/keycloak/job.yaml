apiVersion: batch/v1
kind: Job
metadata:
  name: keycloak-realms
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/component: import
    spec:
      restartPolicy: OnFailure
      initContainers:
        - name: keycloak-realms-init
          image: curlimages/curl
          imagePullPolicy: IfNotPresent
          command: [sh, -c, until curl -fs $URL; do sleep 2; done]
          env:
            - name: URL
              value: keycloak/realms/master/protocol/openid-connect/certs
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      containers:
        - name: keycloak-realms
          image: ghcr.io/kokuwaio/keycloak:19
          imagePullPolicy: IfNotPresent
          args:
            - import
            - --dir=/realms
          envFrom:
            - secretRef:
                name: keycloak-database
            - secretRef:
                name: keycloak-admin
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: realms
              mountPath: /realms
              readOnly: true
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 0
      volumes:
        - name: tmp
          emptyDir: {}
        - name: realms
          configMap:
            name: keycloak-realms
