apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: fleet
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fleet
    spec:
      initContainers:
        - name: fleet-postgres
          image: postgres:14.4-bullseye
          imagePullPolicy: Never
          command: [sh, -c, until psql ; do sleep 1 ; done]
          env:
            - name: PGCONNECT_TIMEOUT
              value: "1"
            - name: PGHOST
              valueFrom:
                configMapKeyRef:
                  name: fleet-environment
                  key: DATASOURCES_DEFAULT_HOST
            - name: PGUSER
              valueFrom:
                configMapKeyRef:
                  name: fleet-environment
                  key: DATASOURCES_DEFAULT_USERNAME
            - name: PGPASSWORD
              valueFrom:
                secretKeyRef:
                  name: fleet-environment
                  key: DATASOURCES_DEFAULT_PASSWORD
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
      containers:
        - name: fleet
          image: ghcr.io/inoa-io/fleet
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: inoa-environment
                optional: true
            - configMapRef:
                name: fleet-environment
            - secretRef:
                name: fleet-environment
          ports:
            - name: http
              containerPort: 8080
            - name: managment
              containerPort: 8090
            - name: mqtt
              containerPort: 1883
            - name: mqtts
              containerPort: 8883
          startupProbe:
            httpGet:
              path: /endpoints/health
              port: managment
            initialDelaySeconds: 10
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 120
          readinessProbe:
            httpGet:
              path: /endpoints/health/readiness
              port: managment
          livenessProbe:
            httpGet:
              path: /endpoints/health/liveness
              port: managment
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            readOnlyRootFilesystem: true
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: tls
              mountPath: /tls
              readOnly: true
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 5
      enableServiceLinks: false
      volumes:
        - name: tls
          configMap:
            name: fleet-tls
