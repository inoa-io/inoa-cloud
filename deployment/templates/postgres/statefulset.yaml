apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: postgres
  selector:
    matchLabels:
      app.kubernetes.io/name: postgres
  template:
    metadata:
      labels:
        app.kubernetes.io/name: postgres
      annotations:
        fluentbit.io/parser: postgres
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgres
          image: postgres:14.4-bullseye
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: postgresql-secret
          ports:
            - name: postgres
              containerPort: 5432
          startupProbe:
            exec:
              command: [/bin/sh, -c, exec pg_isready --user=postgres]
            initialDelaySeconds: 5
            periodSeconds: 1
            successThreshold: 1
            failureThreshold: 55
          livenessProbe:
            exec:
              command: [/bin/sh, -c, exec pg_isready --user=postgres]
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: false
            privileged: false
            allowPrivilegeEscalation: false
            capabilities:
              drop: [ALL]
          volumeMounts:
            - name: config
              mountPath: /docker-entrypoint-initdb.d/init.sh
              subPath: init.sh
              readOnly: true
            - name: data
              mountPath: /var/lib/postgresql
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 10
      volumes:
        - name: config
          configMap:
            name: postgresql-config
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ReadWriteOnce]
        resources:
          requests:
            storage: 1Gi
