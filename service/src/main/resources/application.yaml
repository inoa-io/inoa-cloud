micronaut:
  application:
    name: ${project.artifactId}
    version: ${project.version}

  # https://docs.micronaut.io/latest/guide/#clientConfiguration
  http:
    services:
      keycloak:
        url: ${keycloak.url:`http://keycloak.default.svc:8080`}
        follow-redirects: false
        connect-timeout: ${keycloak.connect-timeout:1000ms}
        read-timeout: ${keycloak.read-timeout:2000ms}
      hawkbit:
        url: ${hawkbit.url:`http://hawkbit.default.svc:8080/UI/login`}

  server:
    # https://docs.micronaut.io/snapshot/guide/index.html#atBlocking
    thread-selection: AUTO
    ## see https://docs.micronaut.io/latest/guide/index.html#cors
    cors:
      enabled: true
      default:
        allowedMethods:
          - GET
          - PATCH
          - POST
          - PUT
          - DELETE
          - FETCH
          - OPTIONS

  # https://micronaut-projects.github.io/micronaut-security/latest/guide/#securityConfiguration
  security:
    authentication: idtoken
    oauth2:
      openid:
        logout-uri: /oauth/logout
      clients:
        inoa-cloud:
          openid:
            issuer: ${micronaut.http.services.keycloak.url}/realms/inoa
          client-id: inoa-cloud
          client-secret: ${inoa.cloud.client-secret:changeMe}
          grant-type: CLIENT_CREDENTIALS
          client-credentials:
            service-id-regex: inoa-cloud|inoa-groundcontrol
        inoa-groundcontrol:
          openid:
            issuer: ${micronaut.http.services.keycloak.url}/realms/inoa
            end-session.enabled: true
          client-id: inoa-groundcontrol
          client-secret: ${inoa.groundcontrol.client-secret:changeMe}
          scopes: [openid, email, profile]

    ## see https://micronaut-projects.github.io/micronaut-security/latest/guide/#interceptUrlMap
    intercept-url-map:
      - pattern: /endpoints/**
        access: isAnonymous()
      - pattern: /openapi/**
        access: isAnonymous()
        ## Authentication must be done without Keycloak for Gateway requests.
      - pattern: /gateway
        access: isAnonymous()
      - pattern: /gateway/**
        access: isAnonymous()
      - pattern: /gateways/**
        access: isAuthenticated()
      - pattern: /**
        access: isAuthenticated()
    # https://micronaut-projects.github.io/micronaut-security/latest/guide/#securityConfiguration
    token:
      name-key: sub
      roles-key: roles
      # https://micronaut-projects.github.io/micronaut-security/latest/guide/#cookieToken
      cookie:
        cookie-http-only: true
        cookie-same-site: lax
        # https://micronaut-projects.github.io/micronaut-security/latest/guide/#jwt
      jwt:
        claims-validators:
          audience: inoa-cloud
        signatures:
          jwks:
            keycloak:
              url: ${micronaut.http.services.keycloak.url}/realms/inoa/protocol/openid-connect/certs
    redirect:
      unauthorized:
        url: /oauth/login/inoa-groundcontrol
      prior-to-login: true
    # https://micronaut-projects.github.io/micronaut-security/latest/guide/#logoutHandler
    endpoints:
      logout:
        enabled: true
        path: /logout
        get-allowed: true

  caches:
    watthour:
      expire-after-write: PT24h

  # https://micronaut-projects.github.io/micronaut-micrometer/latest/guide/#metricsAndReportersPrometheus
  metrics:
    enabled: true
    http:
      path: /**
    binders:
      executor:
        enabled: false
      files:
        enabled: false
        jdbc:
          enabled: false
        jvm:
          enabled: false
        logback:
          enabled: true
        processor:
          enabled: false
        uptime:
          enabled: false
        web:
          enabled: true
    export:
      prometheus:
        enabled: true
        step: PT1m
        descriptions: false

## see https://docs.micronaut.io/latest/guide/index.html#jsonBinding
jackson:
  always-serialize-errors-as-list: false
  serialization:
    writeDatesAsTimestamps: false

## see https://micronaut-projects.github.io/micronaut-sql/latest/guide/#jdbc
datasources:
  default:
    driverClassName: org.postgresql.Driver
    host: postgres.default
    url: jdbc:postgresql://${datasources.default.host:postgres.default.svc}:${datasources.default.port:5432}/${datasources.default.database}
    database: inoa
    username: inoa
    password: changeMe
    dialect: POSTGRES

# https://micronaut-projects.github.io/micronaut-flyway/latest/guide/index.html#additionalConfig
flyway:
  datasources:
    default:
      enabled: true
      loggers: slf4j

## Translator
inoa:
  measurement:
    security:
      tenant-audience-whitelist: [inoa-cloud, inoa]
  fleet:
    security:
      tenant-audience-whitelist: [inoa-cloud, inoa]
    # add some default configurations
    # TODO: remove redundant definitions of configuration definitions
    tenant:
      configurations:
        - definition:
            key: ntp.host
            description: Host of ntp server to use.
            type: STRING
            pattern: "[a-z0-9\\.]{8,20}"
          value: pool.ntp.org
        - definition:
            key: mqtt.url
            description: URI of mqtt server.
            type: STRING
            pattern: (tcp|mqtt|ssl|mqtts)://[a-z0-9\\.\\-]+:[0-9]{3,5}
          value: ${inoa.mqtt.url:`tcp://inoa.example.org:1883`}
        - definition:
            key: mqtt.insecure
            description: Should the client accept unsecure mqtt connections?
            type: BOOLEAN
          value: true
    gateway:
      token:
        audience: inoa-cloud
  mqtt:
    port: 1883
    tls:
      port: 8883
      generateKey: false
      key: /tls/key.pem
      cert: /tls/cert.pem
influxdb:
  url: http://influxdb.default.svc:8086
  organisation: inoa
  bucket: default
kafka:
  bootstrap:
    servers: kafka.default.svc:9092

pageable:
  maxPageSize: 30

endpoints:
  all:
    enabled: false
    path: /endpoints
    sensitive: false
  health:
    enabled: true
    details-visible: ANONYMOUS
    disk-space:
      enabled: false
    discovery-client:
      enabled: false
    # this check was introduced with Micronaut 4.8.0: https://github.com/micronaut-projects/micronaut-core/pull/11388
    # sounds like a usefull feature, but is not healthy for inoa
    # we should review our thread usage and add a monitoring for this
    deadlocked-threads:
      enabled: false
  flyway:
    enabled: true
  prometheus:
    enabled: true
  kafka:
    enabled: true
